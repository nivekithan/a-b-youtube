datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

model User {

  userId          String           @id @unique
  name            String           @db.Text
  googleSub       String           @unique @db.VarChar(255)
  pictureUrl      String           @db.Text
  youtubeAccounts YoutubeAccount[]
  thumbnails      Thumbnails[]
  Jobs            ThumbnailJob[]
}

model YoutubeAccount {
  accountId Int @id @unique @default(autoincrement())

  user                      User           @relation(fields: [userId], references: [userId])
  oauthToken                String         @db.Text
  refreshToken              String         @db.Text
  channelName               String         @db.Text
  ChannelProfilePictureLink String         @db.Text
  channelId                 String
  uploadsPlaylistId         String         @db.Text
  expiresIn                 DateTime
  jobs                      ThumbnailJob[]


  userId String

  @@unique([userId, channelId])
}

model ThumbnailJob {
  jobId Int @id @unique @default(autoincrement())

  user           User           @relation(fields: [userId], references: [userId])
  youtubeAccount YoutubeAccount @relation(fields: [accountId], references: [accountId])
  thumbnails     Thumbnails[]
  testDays       Int
  currentDay     Int            @default(0)
  videoId        String // Youtube video id

  userId    String
  accountId Int
  // @@unique([userId, videoId])
}

model Thumbnails {
  fileId String @id @unique

  user    User         @relation(fields: [userId], references: [userId])
  job     ThumbnailJob @relation(fields: [jobId], references: [jobId])
  result ThumbnailResult[]
  videoId String // yotube video id
  contentType String

  jobId  Int
  userId String
}


model ThumbnailResult {
  id Int @id @unique @default(autoincrement())

  thumbnail Thumbnails @relation(fields: [thumbnailId], references: [fileId])
  clickThroughRate Float
  averageViewDuration Float 
  at DateTime

  thumbnailId String

}